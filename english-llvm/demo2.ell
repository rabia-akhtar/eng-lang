/* demo code checks that a list of documents follow a word count restriction, in this example it is a list of student assignments */

/* TODO: after reading in file, convert buffer to string */

/* function takes in a list of document strings and returns a list of the ones that follow a word count constraint */
string [] check_doc_word_counts(string [] docs, int doc_count, int word_count){

	string [doc_count] valid;
	int i;
	int j = 0;
	for(i = 0; i< doc_count; i = i + 1){

		if (strlen(docs[i])) < (word_count + 1)){
			valid[j] = docs[i];
			j += 1;
		}
	}

	return valid;	

}

/* function reads in a file_name and returns the file in string form */
string read_file(string file_name){
	file fp; // call it "file" if you're using it as a wrapper around C API.
    fp = open(file_name, "r"); // what if there are newlines? tabs? why binary?

	/* maximum size of essay we can process, TBD */
	string [2000] buffer;

	fread(buffer, 2000, 1, fp);

	/* todo */
	string doc = toString(buffer);

	close(file);

	return doc;
}


int main()
{
 /* example use */
  string [5] files;
  files [0] = "ra2805.txt";
  files [1] = "eb3029.txt";
  files [2] = "na2464.txt";
  files [3] = "crj2121.txt";
  files [4] = "ml3706.txt";
  string [5] docs;
  int i;
  for (i = 0; i< 5; i += 1){
  	docs[i] = read_file(files[i]);
  }

  string [5] result = check_doc_word_counts(docs);

  return 0;
}